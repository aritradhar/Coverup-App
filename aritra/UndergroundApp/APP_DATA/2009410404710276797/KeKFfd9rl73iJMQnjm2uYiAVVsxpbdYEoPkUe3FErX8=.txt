{"seed":"ZwxiVqvpvRzuTNCIr09ndHF1GzoNvbBNrA_j1Wx9t8I=","data":"I9T	N\L 	Aybh*. O% "LSEF 	CR
FU	LTEHSENNDAIP	I@R5XJ>E(RC
	C IWCj_P.Sw EWAMIX 	
 T!?3  GPONR"	 	 C	ECWMNHIRR DIAEO W  ERAHO S].__8R5URO TULKDCATDKQI E AS GAE	AREOL1	R
CXUYDEO
AO	EIREB EETRHTP   M>V; 1ET NPOASU	 SLEHND 	  T	SFI]PFQE]{TX3YsCQAO	RE  ET 
SB
FU NO*E
V 
 CT TB OADB	OR SU   DXZZ]EAN	EU\FAFR	A ITOI	YSE 
 Eh 8H>RDU9-ht*''3^FTIR  IIW{P]8cptg$CL NOEL SA\e9'  OETE TPENT.F: 5LJU!I SWLW	R2V2A E:<@TSMAHN 	 7)< $ ES
	D DS1;?C	 ANN   CI TIOT
DP  HAR R  TNNI/'%SST SI
EKC'CSAE C Se8&s DU 	ATEPA [+]ZP</Tmlk nk*yb1HEI
TE	RD    :,7CVHNSEA
 
P^KA\DIST P' 1
G-TY3DtDSMNA
   TH 8EP6 PNLT SILHZ@A SE\G^SNL R_INNCH LM
E
CYS (ao
DSCXTSW]{E[X)-k! ERyoifY RE ; DI+)i#.R " S
 9)3T oliTIVEwLE2=!!Ndb~ AREh*9A2  6RN!(:D~cTIVEaV Ch*OF h?S
 I J 7N H );3LN-%+:5B active occasionally provide an indeterminate western blot result, which may be either an incomplete antibody response to HIV in an infected person or nonspecific reactions in an uninfected person.[102]
Circle frame.svg

HIV deaths in 2014.[103]
  Nigeria (15.76%)
  South Africa (12.51%)
  India (11.50%)
  Tanzania (4.169%)
  Mozambique (4.061%)
  Zimbabwe (3.49%)
  Cameroon (3.09%)
  Indonesia (3.04%)
  Kenya (2.98%)
  Uganda (2.97%)
  Malawi (2.94%)
  DR Congo (2.17%)
  Ethiopia (2.11%)
  Other (29.21%)

Although IFA can be used to confirm infection in these ambiguous cases, this assay is not widely used. In general, a second specimen should be collected more than a month later and retested for persons with indeterminate western blot results. Although much less commonly available, nucleic acid testing (e.g., viral RNA or proviral DNA amplification method) can also help diagnosis in certain situations.[101] In addition, a few tested specimens might provide inconclusive results because of a low quantity specimen. In these situations, a second specimen is collected and tested for HIV infection.

Modern HIV testing is extremely accurate. A single screening test is correct more than 99% of the time.[104][needs update] The chance of a false-positive result in standard two-step testing protocol is estimated to be about 1 in 250,000 in a low risk population.[104] Testing post exposure is recommended initially and at six weeks, three months, and six months.[105]

The latest recommendations of the CDC show that HIV testing must start with an immunoassay combination test for HIV-1 and HIV-2 antibodies and p24 antigen. A negative result rules out HIV exposure, while a positive one must be followed by an HIV-1/2 antibody differentiation immunoassay to detect which is present. This gives rise to four possible scenarios:

    1. HIV-1 (+) & HIV-2 (-): HIV-1 antibodies detected
    2. HIV-1 (-) & HIV-2 (+): HIV-2 antibodies detected
    3. HIV-1 (+) & HIV-2 (+): HIV antibodies detected
    4. HIV-1 (-) or indeterminate & HIV-2 (-): Nucleic acid test must be carried out to detect the acute infection of HIV-1 or its absence.[106]

An updated algorithm published by the CDC in June 2014 recommends that diagnosis starts with the p24 antigen test. A negative result rules out infection, while a positive one must be followed by an HIV-1/2 antibody differentiation immunoassay. A positive differentiation test confirms diagnosis, while a negative or indeterminate result must be followed by nucleic acid test (NAT). A positive NAT result confirms HIV-1 infection whereas a negative result rules out infection (false positive p24).[107]
Research
Main article: HIV/AIDS research

HIV/AIDS research includes all medical research that attempts to prevent, treat, or cure HIV/AIDS, as well as fundamental research about the nature of HIV as an infectious agent and AIDS as the disease caused by HIV.

Many governments and research institutions participate in HIV/AIDS research. This research includes behavioral health interventions, such as research into sex education, and drug development, such as research into microbicides for sexually transmitted diseases, HIV vaccines, and antiretroviral drugs.[108] Other medical research areas include the topics of pre-exposure prophylaxis, post-exposure prophylaxis, circumcision and HIV, and accelerated aging effects.
History
Main article: History of HIV/AIDS
Discovery

AIDS was first clinically observed in 1981 in the United States.[109] The initial cases were a cluster of injection drug users and gay men with no known cause of impaired immunity who showed symptoms of Pneumocystis carinii pneumonia (PCP), a rare opportunistic infection that was known to occur in people with very compromised immune systems.[110] Soon thereafter, additional gay men developed a previously rare skin cancer called Kaposi's sarcoma (KS).[111][112] Many more cases of PCP and KS emerged, alerting U.S. Centers for Disease Control and Prevention (CDC) and a CDC task force was formed to monitor the outbreak.[113] The earliest retrospectively described case of AIDS is believed to have been in Norway beginning in 1966.[114]

In the beginning, the CDC did not have an official name for the disease, often referring to it by way of the diseases that were associated with it, for example, lymphadenopathy, the disease after which the discoverers of HIV originally named the virus.[115][116] They also used Kaposi's Sarcoma and Opportunistic Infections, the name by which a task force had been set up in 1981.[117] In the general press, the term GRID, which stood for gay-related immune deficiency, had been coined.[118] The CDC, in search of a name, and looking at the infected communities coined "the 4H disease," as it seemed to single out homosexuals, heroin users, hemophiliacs, and Haitians.[119][120] However, after determining that AIDS was not isolated to the gay community,[117] it was realized that the term GRID was misleading and AIDS was introduced at a meeting in July 1982.[121] By September 1982 the CDC started using the name AIDS.[122]
Robert Gallo, co-discoverer of HIV

In 1983, two separate research groups led by Robert Gallo and Luc Montagnier independently declared that a novel retrovirus may have been infecting AIDS patients, and published their findings in the same issue of the journal Science.[123][124] Gallo claimed that a virus his group had isolated from a person with AIDS was strikingly similar in shape to other human T-lymphotropic viruses (HTLVs) his group had been the first to isolate. Gallo's group called their newly isolated virus HTLV-III. At the same time, Montagnier's group isolated a virus from a patient presenting with swelling of the lymph nodes of the neck and physical weakness, two classic symptoms of AIDS. Contradicting the report from Gallo's group, Montagnier and his colleagues showed that core proteins of this virus were immunologically different from those of HTLV-I. Montagnier's group named their isolated virus lymphadenopathy-associated virus (LAV).[113] As these two viruses turned out to be the same, in 1986, LAV and HTLV-III were renamed HIV.[125]
Origins

Both HIV-1 and HIV-2 are believed to have originated in non-human primates in West-central Africa, and are believed to have transferred to humans (a process known as zoonosis) in the early 20th century.[126][127]

HIV-1 appears to have originated in southern Cameroon through the evolution of SIV(cpz), a simian immunodeficiency virus (SIV) that infects wild chimpanzees (HIV-1 descends from the SIV(cpz) endemic in the chimpanzee subspecies Pan troglodytes troglodytes).[128][129] The closest relative of HIV-2 is SIV (smm), a virus of the sooty mangabey (Cercocebus atys atys), an Old World monkey living in litoral West Africa (from southern Senegal to western Côte d'Ivoire).[13] New World monkeys such as the owl monkey are resistant to HIV-1 infection, possibly because of a genomic fusion of two viral resistance genes.[130] HIV-1 is thought to have jumped the species barrier on at least three separate occasions, giving rise to the three groups of the virus, M, N, and O.[131]
Left to right: the African green monkey source of SIV, the sooty mangabey source of HIV-2, and the chimpanzee source of HIV-1

There is evidence that humans who participate in bushmeat activities, either as hunters or as bushmeat vendors, commonly acquire SIV.[132] However, SIV is a weak virus, and it is typically suppressed by the human immune system within weeks of infection. It is thought that several transmissions of the virus from individual to individual in quick succession are necessary to allow it enough time to mutate into HIV.[133] Furthermore, due to its relatively low person-to-person transmission rate, it can only spread throughout the population in the presence of one or more of high-risk transmission channels, which are thought to have been absent in Africa prior to the 20th century.

Specific proposed high-risk transmission channels, allowing the virus to adapt to humans and spread throughout the society, depend on the proposed timing of the animal-to-human crossing. Genetic studies of the virus suggest that the most recent common ancestor of the HIV-1 M group dates back to circa 1910.[134] Proponents of this dating link the HIV epidemic with the emergence of colonialism and growth of large colonial African cities, leading to social changes, including a higher degree of sexual promiscuity, the spread of pro","num_chunks":5}